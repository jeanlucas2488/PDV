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

try {
        File dbFile = new File(this.getDatabasePath(DATABASE_NAME).getAbsolutePath());
        FileInputStream fis = new FileInputStream(dbFile);

        String outFileName = DirectoryName + File.separator +
                DATABASE_NAME + ".db";

        // Open the empty db as the output stream
        OutputStream output = new FileOutputStream(outFileName);

        // Transfer bytes from the inputfile to the outputfile
        byte[] buffer = new byte[1024];
        int length;
        while ((length = fis.read(buffer)) > 0) {
            output.write(buffer, 0, length);
        }
        // Close the streams
        output.flush();
        output.close();
        fis.close();


    } catch (IOException e) {
        Log.e("dbBackup:", e.getMessage());
    }
}


"<div>"+
													"<center>"+
													"<div class='san'><b>Sangria de Caixa:</b></div>"+
													"<table>"+
													"<tr>"+
													"<th id='mot'>Motivo</th><th id='val'>Valor</th>"+
													
													"<tr>"+
													"<td id='clS'>Soma:</td> <td id='clL'>Lançado:</td>"+
													"</tr>"+
													"<tr>"+
													"<td id='clso'>R$0.00</td> <td id='clu'>R$0.00</td>"+
													"</tr>"+
													"<tr>"+
													"<td></td><td id='clVal'>Diferença:</td>"+
													"</tr>"+
											"<tr>"+
												"<td></td><td id='clVal'>R$0.00</td>"+
											"</tr>"+
											"</tr>"+
												"</table>"+
												"</center>"+
												"</div>";










File backupDB = null;
								try {

									File sd = Environment.getExternalStorageDirectory();
									File data = Environment.getDataDirectory();

									if (sd.canWrite()) {
										String currentDBPath = "//data//" + "lucas.client.service"
											+ "//databases//" + "myDB.db";
										File currentDB = new File(data, currentDBPath);
										backupDB = new File(sd, "myDB.db");

										if (currentDB.exists()) {
											FileChannel src = new FileInputStream(currentDB).getChannel();
											FileChannel dst = new FileOutputStream(backupDB).getChannel();
											dst.transferFrom(src, 0, src.size());                    
											src.close();
											dst.close();
										}
									} else {
										System.out.println("Não pode escrever no sd");
									}

								} catch (Exception e) {
									Log.e("Exception:" + e);
								}
